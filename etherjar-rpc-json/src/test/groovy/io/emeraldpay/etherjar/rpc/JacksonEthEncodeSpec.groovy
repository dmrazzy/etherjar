/*
 * Copyright (c) 2016-2019 Igor Artamonov, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.emeraldpay.etherjar.rpc


import com.fasterxml.jackson.core.util.DefaultIndenter
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter
import io.emeraldpay.etherjar.domain.Address
import io.emeraldpay.etherjar.domain.BlockHash
import io.emeraldpay.etherjar.domain.TransactionId
import io.emeraldpay.etherjar.domain.Wei
import io.emeraldpay.etherjar.hex.HexData
import io.emeraldpay.etherjar.rpc.json.BlockJson
import io.emeraldpay.etherjar.rpc.json.TransactionJson
import io.emeraldpay.etherjar.rpc.json.TransactionRefJson
import spock.lang.Specification

import java.text.SimpleDateFormat
import java.time.Instant

class JacksonEthEncodeSpec extends Specification {

    JacksonRpcConverter jacksonRpcConverter = new JacksonRpcConverter()

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z")
    DefaultPrettyPrinter prettyPrinter = new DefaultPrettyPrinter().withObjectIndenter(new DefaultIndenter("  ", "\n"))

    def setup() {
        sdf.setTimeZone(TimeZone.getTimeZone('UTC'))
    }

    def "encode basic block"() {
        setup:
        BlockJson<TransactionRefJson> block = new BlockJson<>()
        block.setMiner(Address.from("0x05a56e2d52c817161883f50c441c3228cfe54d9f"))
        block.setDifficulty(BigInteger.valueOf(17171480576))
        block.setExtraData(HexData.from('0x476574682f76312e302e302f6c696e75782f676f312e342e32'))
        block.setGasLimit(5000)
        block.setGasUsed(0)
        block.setHash(BlockHash.from('0x88e96d4537bea4d9c05d12549907b32561d3bf31f45aae734cdc119f13406cb6'))
        block.setNumber(1)
        block.setParentHash(BlockHash.from('0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3'))
        block.setReceiptsRoot(HexData.from('0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'))
        block.setSha3Uncles(HexData.from('0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'))
        block.setSize(537)
        block.setStateRoot(HexData.from('0xd67e4d450343046425ae4271474353857ab860dbc0a1dde64b41b5cd3a532bf3'))
        block.setTimestamp(Instant.ofEpochMilli(1438269988000))
        block.setTotalDifficulty(new BigInteger('07ff800000', 16))
        block.setTransactionsRoot(HexData.from('0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'))
        when:
        def act = jacksonRpcConverter.getObjectMapper().writer().with(prettyPrinter).writeValueAsString(block)
        then:
        act == '{\n'+
                '  "number" : "0x1",\n' +
                '  "hash" : "0x88e96d4537bea4d9c05d12549907b32561d3bf31f45aae734cdc119f13406cb6",\n' +
                '  "timestamp" : "0x55ba4224",\n' +
                '  "transactions" : [ ],\n' +
                '  "parentHash" : "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",\n' +
                '  "sha3Uncles" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",\n' +
                '  "miner" : "0x05a56e2d52c817161883f50c441c3228cfe54d9f",\n' +
                '  "difficulty" : "0x3ff800000",\n' +
                '  "totalDifficulty" : "0x7ff800000",\n' +
                '  "size" : 537,\n' +
                '  "gasLimit" : "0x1388",\n' +
                '  "gasUsed" : "0x0",\n' +
                '  "extraData" : "0x476574682f76312e302e302f6c696e75782f676f312e342e32",\n' +
                '  "stateRoot" : "0xd67e4d450343046425ae4271474353857ab860dbc0a1dde64b41b5cd3a532bf3",\n' +
                '  "receiptsRoot" : "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n' +
                '  "transactionsRoot" : "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n' +
                '  "uncles" : [ ]\n' +
                '}'

    }

    def "encode block with transactions (ids) and uncle"() {
        setup:
        BlockJson<TransactionRefJson> block = new BlockJson<>()
        block.setMiner(Address.from("0xbe57c30111a068b9aac079d0dcda1a9e4ad51881"))
        block.setDifficulty(new BigInteger("7dea18c66b5", 16))
        block.setExtraData(HexData.from("0xd98301040a844765746887676f312e362e328777696e646f7773"))
        block.setGasLimit(Long.parseLong("47e7c4", 16))
        block.setGasUsed(Long.parseLong("a410", 16))
        block.setHash(BlockHash.from("0xdb87647a46c2418c22250ecb23a3861bd6a223632d85b5c5af12303a04387339"))
        block.setNumber(2050000)
        block.setParentHash(BlockHash.from("0xecdf74d16a971ba6618a8f28bfac28daaca7612894993d1050a09214b66dac33"))
        block.setReceiptsRoot(HexData.from("0xeefbe1843a32791d70d0e4b761d4908ccb41e2081afdb548b2db1811fff422fb"))
        block.setSha3Uncles(HexData.from("0xfecf4c589cab09da47205aa2587e7c8d76f521be749672ab0b6e8fb4f6f97630"))
        block.setSize(1310)
        block.setStateRoot(HexData.from("0xc19378ec99df369d3f95fcc8d40966f76e91c9e485957d472fa974acf6ac59e8"))
        block.setTimestamp(Instant.ofEpochMilli(1470921159000))
        block.setTotalDifficulty(new BigInteger("231df208bad7ab602", 16))
        block.setTransactions([
                TransactionId.from("0x8239debcd3a242afb6a664784d2a2e2384c5192880d680331f00c50cccd88d0c"),
                TransactionId.from("0x4556bec0c50d23a05d7d7eb056206ffbf8418244216aa4882c75bd6130f46637")
        ].collect { new TransactionRefJson(it) })
        block.setTransactionsRoot(HexData.from("0xac58c7512041220f5e627300f7e41e03a1ebb3b6837b4d2b00063293ae1b46ba"))
        block.setUncles([
                BlockHash.from("0x56f250f7de13d3fcb0cc4af795c14a303eaba5aaea981c646c2d7d139c405783")
        ])

        when:
        def act = jacksonRpcConverter.getObjectMapper().writer().with(prettyPrinter).writeValueAsString(block)
        then:
        act == '{\n' +
                '  "number" : "0x1f47d0",\n' +
                '  "hash" : "0xdb87647a46c2418c22250ecb23a3861bd6a223632d85b5c5af12303a04387339",\n' +
                '  "timestamp" : "0x57ac79c7",\n' +
                '  "transactions" : [ "0x8239debcd3a242afb6a664784d2a2e2384c5192880d680331f00c50cccd88d0c", "0x4556bec0c50d23a05d7d7eb056206ffbf8418244216aa4882c75bd6130f46637" ],\n' +
                '  "parentHash" : "0xecdf74d16a971ba6618a8f28bfac28daaca7612894993d1050a09214b66dac33",\n' +
                '  "sha3Uncles" : "0xfecf4c589cab09da47205aa2587e7c8d76f521be749672ab0b6e8fb4f6f97630",\n' +
                '  "miner" : "0xbe57c30111a068b9aac079d0dcda1a9e4ad51881",\n' +
                '  "difficulty" : "0x7dea18c66b5",\n' +
                '  "totalDifficulty" : "0x231df208bad7ab602",\n' +
                '  "size" : 1310,\n' +
                '  "gasLimit" : "0x47e7c4",\n' +
                '  "gasUsed" : "0xa410",\n' +
                '  "extraData" : "0xd98301040a844765746887676f312e362e328777696e646f7773",\n' +
                '  "stateRoot" : "0xc19378ec99df369d3f95fcc8d40966f76e91c9e485957d472fa974acf6ac59e8",\n' +
                '  "receiptsRoot" : "0xeefbe1843a32791d70d0e4b761d4908ccb41e2081afdb548b2db1811fff422fb",\n' +
                '  "transactionsRoot" : "0xac58c7512041220f5e627300f7e41e03a1ebb3b6837b4d2b00063293ae1b46ba",\n' +
                '  "uncles" : [ "0x56f250f7de13d3fcb0cc4af795c14a303eaba5aaea981c646c2d7d139c405783" ]\n' +
                '}'


    }

    def "encode block with transaction full"() {
        setup:
        BlockJson<TransactionJson> block = new BlockJson<>()
        block.setMiner(Address.from("0xbe57c30111a068b9aac079d0dcda1a9e4ad51881"))
        block.setDifficulty(new BigInteger("7dea18c66b5", 16))
        block.setExtraData(HexData.from("0xd98301040a844765746887676f312e362e328777696e646f7773"))
        block.setGasLimit(Long.parseLong("47e7c4", 16))
        block.setGasUsed(Long.parseLong("a410", 16))
        block.setHash(BlockHash.from("0xdb87647a46c2418c22250ecb23a3861bd6a223632d85b5c5af12303a04387339"))
        block.setNumber(2050000)
        block.setParentHash(BlockHash.from("0xecdf74d16a971ba6618a8f28bfac28daaca7612894993d1050a09214b66dac33"))
        block.setReceiptsRoot(HexData.from("0xeefbe1843a32791d70d0e4b761d4908ccb41e2081afdb548b2db1811fff422fb"))
        block.setSha3Uncles(HexData.from("0xfecf4c589cab09da47205aa2587e7c8d76f521be749672ab0b6e8fb4f6f97630"))
        block.setSize(1310)
        block.setStateRoot(HexData.from("0xc19378ec99df369d3f95fcc8d40966f76e91c9e485957d472fa974acf6ac59e8"))
        block.setTimestamp(Instant.ofEpochMilli(1470921159000))
        block.setTotalDifficulty(new BigInteger("231df208bad7ab602", 16))
        TransactionJson tx = new TransactionJson()
        tx.blockHash = block.getHash()
        tx.blockNumber = block.getNumber()
        tx.from = Address.from("0xed059bc543141c8c93031d545079b3da0233b27f")
        tx.to = Address.from("0x8b3b3b624c3c0397d3da8fd861512393d51dcbac")
        tx.gas = Long.parseLong("3d090", 16)
        tx.gasPrice = new Wei(new BigInteger("059b9b95f0", 16))
        tx.hash = TransactionId.from("0x19442fe5e9e4f4819b7090298f1f108f2a1cca1f2167a413c771d6574fa34a31")
        tx.input = HexData.from("0x667a2f58")
        tx.nonce = 15524
        tx.transactionIndex = 4
        tx.value = Wei.ZERO

        block.setTransactions([
                tx
        ])
        block.setTransactionsRoot(HexData.from("0xac58c7512041220f5e627300f7e41e03a1ebb3b6837b4d2b00063293ae1b46ba"))

        when:
        def act = jacksonRpcConverter.getObjectMapper().writer().with(prettyPrinter).writeValueAsString(block)
        then:
        act == '{\n' +
                '  "number" : "0x1f47d0",\n' +
                '  "hash" : "0xdb87647a46c2418c22250ecb23a3861bd6a223632d85b5c5af12303a04387339",\n' +
                '  "timestamp" : "0x57ac79c7",\n' +
                '  "transactions" : [ {\n' +
                '    "hash" : "0x19442fe5e9e4f4819b7090298f1f108f2a1cca1f2167a413c771d6574fa34a31",\n' +
                '    "nonce" : "0x3ca4",\n' +
                '    "blockHash" : "0xdb87647a46c2418c22250ecb23a3861bd6a223632d85b5c5af12303a04387339",\n' +
                '    "blockNumber" : "0x1f47d0",\n' +
                '    "transactionIndex" : "0x4",\n' +
                '    "from" : "0xed059bc543141c8c93031d545079b3da0233b27f",\n' +
                '    "to" : "0x8b3b3b624c3c0397d3da8fd861512393d51dcbac",\n' +
                '    "value" : "0x0",\n' +
                '    "gasPrice" : "0x59b9b95f0",\n' +
                '    "gas" : "0x3d090",\n' +
                '    "input" : "0x667a2f58"\n' +
                '  } ],\n' +
                '  "parentHash" : "0xecdf74d16a971ba6618a8f28bfac28daaca7612894993d1050a09214b66dac33",\n' +
                '  "sha3Uncles" : "0xfecf4c589cab09da47205aa2587e7c8d76f521be749672ab0b6e8fb4f6f97630",\n' +
                '  "miner" : "0xbe57c30111a068b9aac079d0dcda1a9e4ad51881",\n' +
                '  "difficulty" : "0x7dea18c66b5",\n' +
                '  "totalDifficulty" : "0x231df208bad7ab602",\n' +
                '  "size" : 1310,\n' +
                '  "gasLimit" : "0x47e7c4",\n' +
                '  "gasUsed" : "0xa410",\n' +
                '  "extraData" : "0xd98301040a844765746887676f312e362e328777696e646f7773",\n' +
                '  "stateRoot" : "0xc19378ec99df369d3f95fcc8d40966f76e91c9e485957d472fa974acf6ac59e8",\n' +
                '  "receiptsRoot" : "0xeefbe1843a32791d70d0e4b761d4908ccb41e2081afdb548b2db1811fff422fb",\n' +
                '  "transactionsRoot" : "0xac58c7512041220f5e627300f7e41e03a1ebb3b6837b4d2b00063293ae1b46ba",\n' +
                '  "uncles" : [ ]\n' +
                '}'
    }

    def "encode transaction"() {
        setup:
        TransactionJson tx = new TransactionJson()
        tx.blockHash = BlockHash.from("0xdb87647a46c2418c22250ecb23a3861bd6a223632d85b5c5af12303a04387339")
        tx.blockNumber = 2050000
        tx.from = Address.from("0xed059bc543141c8c93031d545079b3da0233b27f")
        tx.to = Address.from("0x8b3b3b624c3c0397d3da8fd861512393d51dcbac")
        tx.gas = Long.parseLong("3d090", 16)
        tx.gasPrice = new Wei(new BigInteger("059b9b95f0", 16))
        tx.hash = TransactionId.from("0x19442fe5e9e4f4819b7090298f1f108f2a1cca1f2167a413c771d6574fa34a31")
        tx.input = HexData.from("0x667a2f58")
        tx.nonce = 15524
        tx.transactionIndex = 4
        tx.value = Wei.ZERO

        when:
        def act = jacksonRpcConverter.getObjectMapper().writer().with(prettyPrinter).writeValueAsString(tx)
        then:
        act == '{\n' +
                '  "hash" : "0x19442fe5e9e4f4819b7090298f1f108f2a1cca1f2167a413c771d6574fa34a31",\n' +
                '  "nonce" : "0x3ca4",\n' +
                '  "blockHash" : "0xdb87647a46c2418c22250ecb23a3861bd6a223632d85b5c5af12303a04387339",\n' +
                '  "blockNumber" : "0x1f47d0",\n' +
                '  "transactionIndex" : "0x4",\n' +
                '  "from" : "0xed059bc543141c8c93031d545079b3da0233b27f",\n' +
                '  "to" : "0x8b3b3b624c3c0397d3da8fd861512393d51dcbac",\n' +
                '  "value" : "0x0",\n' +
                '  "gasPrice" : "0x59b9b95f0",\n' +
                '  "gas" : "0x3d090",\n' +
                '  "input" : "0x667a2f58"\n' +
                '}'
    }

    def "encode transaction without block"() {
        setup:
        TransactionJson tx = new TransactionJson()
        tx.from = Address.from("0xed059bc543141c8c93031d545079b3da0233b27f")
        tx.to = Address.from("0x8b3b3b624c3c0397d3da8fd861512393d51dcbac")
        tx.gas = Long.parseLong("3d090", 16)
        tx.gasPrice = new Wei(new BigInteger("059b9b95f0", 16))
        tx.hash = TransactionId.from("0x19442fe5e9e4f4819b7090298f1f108f2a1cca1f2167a413c771d6574fa34a31")
        tx.input = HexData.from("0x667a2f58")
        tx.nonce = 15524
        tx.value = Wei.ZERO

        when:
        def act = jacksonRpcConverter.getObjectMapper().writer().with(prettyPrinter).writeValueAsString(tx)
        then:
        act == '{\n' +
                '  "hash" : "0x19442fe5e9e4f4819b7090298f1f108f2a1cca1f2167a413c771d6574fa34a31",\n' +
                '  "nonce" : "0x3ca4",\n' +
                '  "from" : "0xed059bc543141c8c93031d545079b3da0233b27f",\n' +
                '  "to" : "0x8b3b3b624c3c0397d3da8fd861512393d51dcbac",\n' +
                '  "value" : "0x0",\n' +
                '  "gasPrice" : "0x59b9b95f0",\n' +
                '  "gas" : "0x3d090",\n' +
                '  "input" : "0x667a2f58"\n' +
                '}'
    }

    def "encode transaction create"() {
        setup:
        TransactionJson tx = new TransactionJson()
        tx.blockHash = BlockHash.from("0x604f7bef716ded3aeea97946652940c0c075bcbb2e6745af042ab1c1ad988946")
        tx.blockNumber = 2007232
        tx.from = Address.from("0x72d61152f6c0c0e57c1fe2b0343a5eac055ff56e")
        tx.creates = Address.from("0xab8f1113fd508c3d82b1aec7e89eb25ad789c83e")
        tx.gas = Long.parseLong("2dc6c0", 16)
        tx.gasPrice = new Wei(new BigInteger("4a817c800", 16))
        tx.hash = TransactionId.from("0x1e694eba2778d34855fa1e01e0765acb31ce75a9abe8667882ffc2c12f4372bc")
        tx.input = HexData.from("0x6060604052600261010860005055604051611b51380380611b51833981016040528080518201919060200180519060200190919080519060200190919050505b805b83835b600060018351016001600050819055503373ffffffffffffffffffffffffffffffffffffffff16600260005060016101008110156100025790900160005b5081905550600161010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550600090505b825181101561016e5782818151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff166002600050826002016101008110156100025790900160005b508190555080600201610102600050600085848151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055505b80600101905080506100c2565b816000600050819055505b505050806101056000508190555061018f6101ad565b610107600050819055505b505b505050611992806101bf6000396000f35b600062015180420490506101bc565b9056606060405236156100f8576000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146101605780632f54bf6e146101785780634123cb6b146101a457806352375093146101c757806354fd4d50146101ea5780635c52c2f51461020d578063659010e71461021c5780637065cb481461023f578063746c917114610257578063797af6271461027a578063b20d30a9146102a6578063b61d27f6146102be578063b75c7dc614610307578063ba51a6df1461031f578063c2cf732614610337578063cbf0b0c01461036c578063f00d4b5d14610384578063f1736d86146103a5576100f8565b61015e5b600034111561015b577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b565b005b61017660048080359060200190919050506107c4565b005b61018e60048080359060200190919050506109a5565b6040518082815260200191505060405180910390f35b6101b16004805050610a91565b6040518082815260200191505060405180910390f35b6101d46004805050610b38565b6040518082815260200191505060405180910390f35b6101f76004805050610b42565b6040518082815260200191505060405180910390f35b61021a6004805050610adf565b005b6102296004805050610b2e565b6040518082815260200191505060405180910390f35b610255600480803590602001909190505061066e565b005b6102646004805050610a88565b6040518082815260200191505060405180910390f35b6102906004808035906020019091905050610f0e565b6040518082815260200191505060405180910390f35b6102bc6004808035906020019091905050610a9a565b005b6102f160048080359060200190919080359060200190919080359060200190820180359060200191909192905050610b9e565b6040518082815260200191505060405180910390f35b61031d60048080359060200190919050506103c8565b005b610335600480803590602001909190505061090f565b005b61035660048080359060200190919080359060200190919050506109e7565b6040518082815260200191505060405180910390f35b6103826004808035906020019091905050610b4c565b005b6103a360048080359060200190919080359060200190919050506104ca565b005b6103b26004805050610b24565b6040518082815260200191505060405180910390f35b60006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561040f576104c4565b8260020a91506101036000506000858152602001908152602001600020600050905060008282600101600050541611156104c3578060000160008181505480929190600101919050555081816001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b3385604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b50505050565b600060003643604051808484808284378201915050828152602001935050505060405180910390206104fb816112db565b1561066757610509836109a5565b156105145750610669565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156105565750610669565b61055e611777565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005b5081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8484604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b505b505050565b600036436040518084848082843782019150508281526020019350505050604051809103902061069d816112db565b156107bf576106ab826109a5565b156106b657506107c1565b6106be611777565b60fa6001600050541015156106d7576106d561153d565b505b60fa6001600050541015156106ec57506107c1565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff1660026000506001600050546101008110156100025790900160005b508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c382604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b50565b600060003643604051808484808284378201915050828152602001935050505060405180910390206107f5816112db565b156109095761010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561083c575061090b565b6001600160005054036000600050541115610857575061090b565b60006002600050836101008110156100025790900160005b5081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506108b2611777565b6108ba61153d565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b5050565b600036436040518084848082843782019150508281526020019350505050604051809103902061093e816112db565b156109a05760016000505482111561095657506109a2565b81600060005081905550610968611777565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da826040518082815260200191505060405180910390a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541190506109e2565b919050565b60006000600060006101036000506000878152602001908152602001600020600050925061010260005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610a505760009350610a7f565b8160020a90506000818460010160005054161415610a755760009350610a7f56610a7e565b60019350610a7f565b5b50505092915050565b60006000505481565b60016000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610ac9816112db565b15610ada5781610105600050819055505b505b50565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b0e816112db565b15610b20576000610106600050819055505b505b565b6101056000505481565b6101066000505481565b6101076000505481565b6101086000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b7b816112db565b15610b99578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b6000610ba9336109a5565b15610f0557610bb7846116d7565b15610ca0577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd0043385878686604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a18473ffffffffffffffffffffffffffffffffffffffff168484846040518083838082843782019150509250505060006040518083038185876185025a03f1925050505060006001029050610f06565b600036436040518084848082843782019150508281526020019350505050604051809103902090508050610cd381610f0e565b158015610d3357506000610109600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610f045784610109600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555083610109600050600083815260200190815260200160002060005060010160005081905550828261010960005060008481526020019081526020016000206000506002016000509190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e0857803560ff1916838001178555610e39565b82800160010185558215610e39579182015b82811115610e38578235826000505591602001919060010190610e1a565b5b509050610e649190610e46565b80821115610e605760008181506000905550600101610e46565b5090565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf32813386888787604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b5b5b949350505050565b600081610f1a816112db565b156112d4576000610109600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112d357610109600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610109600050600085815260200190815260200160002060005060010160005054610109600050600086815260200190815260200160002060005060020160005060405180828054600181600116156101000203166002900480156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b505091505060006040518083038185876185025a03f192505050507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a3384610109600050600087815260200190815260200160002060005060010160005054610109600050600088815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101096000506000898152602001908152602001600020600050600201600050604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156112005780601f106111d557610100808354040283529160200191611200565b820191906000526020600020905b8154815290600101906020018083116111e357829003601f168201915b5050965050505050505060405180910390a1610109600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061128957506112c6565b601f0160209004906000526020600020908101906112c591906112a7565b808211156112c157600081815060009055506001016112a7565b5090565b5b50505060019150506112d6565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561132457611535565b610103600050600086815260200190815260200160002060005091506000826000016000505414156113fd57600060005054826000016000508190555060008260010160005081905550610104600050805480919060010190908154818355818115116113c3578183600052602060002091820191016113c291906113a4565b808211156113be57600081815060009055506001016113a4565b5090565b5b5050508260020160005081905550846101046000508360020160005054815481101561000257906000526020600020900160005b50819055505b8260020a90506000818360010160005054161415611534577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda3386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001826000016000505411151561150757610104600050610103600050600087815260200190815260200160002060005060020160005054815481101561000257906000526020600020900160005b50600090556101036000506000868152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001935061153556611533565b816000016000818150548092919060019003919050555080826001016000828282505417925050819055505b5b5b505050919050565b60006000600190505b6001600050548110156116d2575b60016000505481108015611580575060006002600050826101008110156100025790900160005b505414155b15611592578080600101915050611554565b5b60016001600050541180156115c45750600060026000506001600050546101008110156100025790900160005b5054145b156115e357600160008181505480929190600190039190505550611593565b600160005054811080156116145750600060026000506001600050546101008110156100025790900160005b505414155b8015611637575060006002600050826101008110156100025790900160005b5054145b156116cd5760026000506001600050546101008110156100025790900160005b50546002600050826101008110156100025790900160005b50819055508061010260005060006002600050846101008110156100025790900160005b5054815260200190815260200160002060005081905550600060026000506001600050546101008110156100025790900160005b50819055505b611546565b5b5090565b60006116e2336109a5565b1561177157610107600050546116f6611980565b111561171b57600061010660005081905550611710611980565b610107600050819055505b610106600050548261010660005054011015801561174757506101056000505482610106600050540111155b15611768578161010660008282825054019250508190555060019050611772565b60009050611772565b5b919050565b60006000610104600050805490509150600090505b8181101561187857610109600050600061010460005083815481101561000257906000526020600020900160005b5054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061182a5750611867565b601f0160209004906000526020600020908101906118669190611848565b808211156118625760008181506000905550600101611848565b5090565b5b5050505b806001019050805061178c565b611880611885565b5b5050565b60006000610104600050805490509150600090505b8181101561193857600060010261010460005082815481101561000257906000526020600020900160005b505414151561192a57610103600050600061010460005083815481101561000257906000526020600020900160005b50548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b806001019050805061189a565b61010460005080546000825590600052602060002090810190611979919061195b565b80821115611975576000818150600090555060010161195b565b5090565b5b505b5050565b6000620151804204905061198f565b90560000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052b7d2dcc80cd2e4000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000072d61152f6c0c0e57c1fe2b0343a5eac055ff56e")
        tx.nonce = 1
        tx.transactionIndex = 0
        tx.value = Wei.ZERO

        when:
        def act = jacksonRpcConverter.getObjectMapper().writer().with(prettyPrinter).writeValueAsString(tx)
        then:
        act == '{\n' +
                '  "hash" : "0x1e694eba2778d34855fa1e01e0765acb31ce75a9abe8667882ffc2c12f4372bc",\n' +
                '  "nonce" : "0x1",\n' +
                '  "blockHash" : "0x604f7bef716ded3aeea97946652940c0c075bcbb2e6745af042ab1c1ad988946",\n' +
                '  "blockNumber" : "0x1ea0c0",\n' +
                '  "transactionIndex" : "0x0",\n' +
                '  "from" : "0x72d61152f6c0c0e57c1fe2b0343a5eac055ff56e",\n' +
                '  "to" : null,\n' +
                '  "creates" : "0xab8f1113fd508c3d82b1aec7e89eb25ad789c83e",\n' +
                '  "value" : "0x0",\n' +
                '  "gasPrice" : "0x4a817c800",\n' +
                '  "gas" : "0x2dc6c0",\n' +
                '  "input" : "0x6060604052600261010860005055604051611b51380380611b51833981016040528080518201919060200180519060200190919080519060200190919050505b805b83835b600060018351016001600050819055503373ffffffffffffffffffffffffffffffffffffffff16600260005060016101008110156100025790900160005b5081905550600161010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550600090505b825181101561016e5782818151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff166002600050826002016101008110156100025790900160005b508190555080600201610102600050600085848151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055505b80600101905080506100c2565b816000600050819055505b505050806101056000508190555061018f6101ad565b610107600050819055505b505b505050611992806101bf6000396000f35b600062015180420490506101bc565b9056606060405236156100f8576000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146101605780632f54bf6e146101785780634123cb6b146101a457806352375093146101c757806354fd4d50146101ea5780635c52c2f51461020d578063659010e71461021c5780637065cb481461023f578063746c917114610257578063797af6271461027a578063b20d30a9146102a6578063b61d27f6146102be578063b75c7dc614610307578063ba51a6df1461031f578063c2cf732614610337578063cbf0b0c01461036c578063f00d4b5d14610384578063f1736d86146103a5576100f8565b61015e5b600034111561015b577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b565b005b61017660048080359060200190919050506107c4565b005b61018e60048080359060200190919050506109a5565b6040518082815260200191505060405180910390f35b6101b16004805050610a91565b6040518082815260200191505060405180910390f35b6101d46004805050610b38565b6040518082815260200191505060405180910390f35b6101f76004805050610b42565b6040518082815260200191505060405180910390f35b61021a6004805050610adf565b005b6102296004805050610b2e565b6040518082815260200191505060405180910390f35b610255600480803590602001909190505061066e565b005b6102646004805050610a88565b6040518082815260200191505060405180910390f35b6102906004808035906020019091905050610f0e565b6040518082815260200191505060405180910390f35b6102bc6004808035906020019091905050610a9a565b005b6102f160048080359060200190919080359060200190919080359060200190820180359060200191909192905050610b9e565b6040518082815260200191505060405180910390f35b61031d60048080359060200190919050506103c8565b005b610335600480803590602001909190505061090f565b005b61035660048080359060200190919080359060200190919050506109e7565b6040518082815260200191505060405180910390f35b6103826004808035906020019091905050610b4c565b005b6103a360048080359060200190919080359060200190919050506104ca565b005b6103b26004805050610b24565b6040518082815260200191505060405180910390f35b60006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561040f576104c4565b8260020a91506101036000506000858152602001908152602001600020600050905060008282600101600050541611156104c3578060000160008181505480929190600101919050555081816001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b3385604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b50505050565b600060003643604051808484808284378201915050828152602001935050505060405180910390206104fb816112db565b1561066757610509836109a5565b156105145750610669565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156105565750610669565b61055e611777565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005b5081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8484604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b505b505050565b600036436040518084848082843782019150508281526020019350505050604051809103902061069d816112db565b156107bf576106ab826109a5565b156106b657506107c1565b6106be611777565b60fa6001600050541015156106d7576106d561153d565b505b60fa6001600050541015156106ec57506107c1565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff1660026000506001600050546101008110156100025790900160005b508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c382604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b50565b600060003643604051808484808284378201915050828152602001935050505060405180910390206107f5816112db565b156109095761010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561083c575061090b565b6001600160005054036000600050541115610857575061090b565b60006002600050836101008110156100025790900160005b5081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506108b2611777565b6108ba61153d565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b5050565b600036436040518084848082843782019150508281526020019350505050604051809103902061093e816112db565b156109a05760016000505482111561095657506109a2565b81600060005081905550610968611777565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da826040518082815260200191505060405180910390a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541190506109e2565b919050565b60006000600060006101036000506000878152602001908152602001600020600050925061010260005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610a505760009350610a7f565b8160020a90506000818460010160005054161415610a755760009350610a7f56610a7e565b60019350610a7f565b5b50505092915050565b60006000505481565b60016000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610ac9816112db565b15610ada5781610105600050819055505b505b50565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b0e816112db565b15610b20576000610106600050819055505b505b565b6101056000505481565b6101066000505481565b6101076000505481565b6101086000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b7b816112db565b15610b99578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b6000610ba9336109a5565b15610f0557610bb7846116d7565b15610ca0577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd0043385878686604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a18473ffffffffffffffffffffffffffffffffffffffff168484846040518083838082843782019150509250505060006040518083038185876185025a03f1925050505060006001029050610f06565b600036436040518084848082843782019150508281526020019350505050604051809103902090508050610cd381610f0e565b158015610d3357506000610109600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610f045784610109600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555083610109600050600083815260200190815260200160002060005060010160005081905550828261010960005060008481526020019081526020016000206000506002016000509190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e0857803560ff1916838001178555610e39565b82800160010185558215610e39579182015b82811115610e38578235826000505591602001919060010190610e1a565b5b509050610e649190610e46565b80821115610e605760008181506000905550600101610e46565b5090565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf32813386888787604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b5b5b949350505050565b600081610f1a816112db565b156112d4576000610109600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112d357610109600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610109600050600085815260200190815260200160002060005060010160005054610109600050600086815260200190815260200160002060005060020160005060405180828054600181600116156101000203166002900480156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b505091505060006040518083038185876185025a03f192505050507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a3384610109600050600087815260200190815260200160002060005060010160005054610109600050600088815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101096000506000898152602001908152602001600020600050600201600050604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156112005780601f106111d557610100808354040283529160200191611200565b820191906000526020600020905b8154815290600101906020018083116111e357829003601f168201915b5050965050505050505060405180910390a1610109600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061128957506112c6565b601f0160209004906000526020600020908101906112c591906112a7565b808211156112c157600081815060009055506001016112a7565b5090565b5b50505060019150506112d6565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561132457611535565b610103600050600086815260200190815260200160002060005091506000826000016000505414156113fd57600060005054826000016000508190555060008260010160005081905550610104600050805480919060010190908154818355818115116113c3578183600052602060002091820191016113c291906113a4565b808211156113be57600081815060009055506001016113a4565b5090565b5b5050508260020160005081905550846101046000508360020160005054815481101561000257906000526020600020900160005b50819055505b8260020a90506000818360010160005054161415611534577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda3386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001826000016000505411151561150757610104600050610103600050600087815260200190815260200160002060005060020160005054815481101561000257906000526020600020900160005b50600090556101036000506000868152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001935061153556611533565b816000016000818150548092919060019003919050555080826001016000828282505417925050819055505b5b5b505050919050565b60006000600190505b6001600050548110156116d2575b60016000505481108015611580575060006002600050826101008110156100025790900160005b505414155b15611592578080600101915050611554565b5b60016001600050541180156115c45750600060026000506001600050546101008110156100025790900160005b5054145b156115e357600160008181505480929190600190039190505550611593565b600160005054811080156116145750600060026000506001600050546101008110156100025790900160005b505414155b8015611637575060006002600050826101008110156100025790900160005b5054145b156116cd5760026000506001600050546101008110156100025790900160005b50546002600050826101008110156100025790900160005b50819055508061010260005060006002600050846101008110156100025790900160005b5054815260200190815260200160002060005081905550600060026000506001600050546101008110156100025790900160005b50819055505b611546565b5b5090565b60006116e2336109a5565b1561177157610107600050546116f6611980565b111561171b57600061010660005081905550611710611980565b610107600050819055505b610106600050548261010660005054011015801561174757506101056000505482610106600050540111155b15611768578161010660008282825054019250508190555060019050611772565b60009050611772565b5b919050565b60006000610104600050805490509150600090505b8181101561187857610109600050600061010460005083815481101561000257906000526020600020900160005b5054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061182a5750611867565b601f0160209004906000526020600020908101906118669190611848565b808211156118625760008181506000905550600101611848565b5090565b5b5050505b806001019050805061178c565b611880611885565b5b5050565b60006000610104600050805490509150600090505b8181101561193857600060010261010460005082815481101561000257906000526020600020900160005b505414151561192a57610103600050600061010460005083815481101561000257906000526020600020900160005b50548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b806001019050805061189a565b61010460005080546000825590600052602060002090810190611979919061195b565b80821115611975576000818150600090555060010161195b565b5090565b5b505b5050565b6000620151804204905061198f565b90560000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052b7d2dcc80cd2e4000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000072d61152f6c0c0e57c1fe2b0343a5eac055ff56e"\n' +
                '}'
    }
}
